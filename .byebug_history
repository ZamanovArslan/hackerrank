exit
c
ranked[ranked_counter..-1]
ranked.last
ranked_counter
c
ranked_counter
score
c
prev_rank
c
rank
prev_rank
score >= rank
rank
c
rank
score
score >= rank
exit
ranked[ranked_counter..-1]
rank
prev_rank
position
c
ranked_counter
score
prev_rank
rank
exit
prev_rank
ranked_counter
rank
score
position
c
position
c
ranked_counter
position
ranked[ranked_counter..-1]
ranked_counter
prev_rank
score
result
c
ranked
player.size
result
c
exit
i
ranked[i..-1]
score >= prev_rank
player[-i]
exit
c
player.size
i
exit
rank > score
score
prev_rank
rank
c
exit
areas
exit
row_index
element
row_index
index
c
index
c
areas
c
areas
c
areas
c
areas.first
areas
c
areas
exit
 update_area(areas, closest_area_index, index, row_index)
exit
update_area(areas, closest_area_index, index, row_index)
update_area(areas, closest_area_index, index, row_index).first
update_area(areas, closest_area_index, index, row_index)
row_index
index
closest_area_index
areas
exit
c
result
c
exit
c
exit
row_index
index
result
c
result_index
coordinates == [index - 1, row_index - 1] || coordinates == [index, row_index - 1] || coordinates == [index - 1, row_index] || coordinates == [index + 1, row_index - 1]
coordinates == [index - 1, row_index - 1] || coordinates == [index, row_index - 1] ||
coordinates == [index - 1, row_index]
[index - 1, row_index]
[index - 1, row_index - 1]
coordinates
areas
row_index
c
row-index
index
idnex
c
row_index
index
areas
c
areas
row_index
index
result
exit
result_index
exit
c
areas[0]
areas
result
exit
result
exit
c
 coordinates == [index - 1, row_index]
[index - 1, row_index - 1]
row_index
index
idnex
coordinates
area
exit
area
coordinates
areas
